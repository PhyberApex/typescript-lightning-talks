import{_}from"./slidev/VClick-B-Yd-hvh.js";import{_ as i}from"./Monaco.vue_vue_type_style_index_0_lang-DCBBPJm_.js";import{_ as p}from"./slidev/VClicks-BvycHyMm.js";import{b as A,o as d,w as t,g as o,e as a,am as r,m as f,v as y,x as g,X as s}from"./modules/vue-DIAxZguR.js";import{I as x}from"./slidev/default-Bljh3xEF.js";import{u as Y,f as w}from"./slidev/context-U0ZbfgXX.js";import"./index-N3-pL5_r.js";import"./monaco/bundled-types-HNtKQ5TU.js";import"./modules/file-saver-BzOOqXCn.js";import"./modules/shiki-NYqE5D5R.js";const L={__name:"slides.md__slidev_4",setup(Q){const{$clicksContext:n,$frontmatter:l}=Y();return n.setup(),(T,e)=>{const m=p,u=i,c=_;return d(),A(x,y(g(s(w)(s(l),3))),{default:t(()=>[e[1]||(e[1]=o("h1",null,"Array Types with T[number]",-1)),a(m,null,{default:t(()=>e[0]||(e[0]=[o("ul",null,[o("li",null,"Special syntax for accessing array element types"),o("li",null,[o("code",null,"T[number]"),r(" extracts type of array elements")]),o("li",null,[r("Commonly used with "),o("code",null,"typeof"),r(" and "),o("code",null,"as const")]),o("li",null,"Powerful way to derive types from array values")],-1)])),_:1,__:[0]}),a(c,null,{default:t(()=>[a(u,f({"code-lz":"PTAECEEMGcEsGNSQE7MgT1AF3QBwKaj4AeWa8WsA9gHYBQ8t0WoNArgLYBG+y0oAXlABtAIwAaUACZJAZkkAWSQFYAugG5QIJABMdSUM2SwaAczo4CoAHKceyAIKoMg7HnxUAZqzu9o6i3cbX2QAFSChW25eJzR0YXZo5A06Om0AdVgsAAtQAHIYUEYaZjzQTypkUAAbLN5IarcCaAYmFmQqavx+IWEAIkgdDhM+yT78HSzK0dA+4rJYLjYsadUtYELi5gDLQgAlTu7YlyFdr1AOrv9AqwOu1zuj53jE+xSgA===",lang:"ts"},{}),null,16)]),_:1})]),_:1,__:[1]},16)}}};export{L as default};
