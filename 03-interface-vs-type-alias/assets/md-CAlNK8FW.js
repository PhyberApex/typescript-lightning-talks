import{_ as u}from"./slidev/VClick-BlkjJGwR.js";import{_ as p}from"./slidev/VClicks-Dm2ybFkX.js";import{o as c,c as m,k as t,e,l,q as f,s as d,I as o}from"./modules/vue-CjsfXi19.js";import{_}from"./slidev/two-cols.vue_vue_type_script_setup_true_lang-DovkDHhd.js";import{u as v,f as y}from"./slidev/context-BLEP_x1w.js";import"./index-Brz3bpWc.js";import"./monaco/bundled-types-CbnShZ2X.js";import"./modules/file-saver-igGfcqei.js";import"./modules/shiki-BuZj_XzS.js";const g={class:"ml-4"},z={__name:"slides.md__slidev_6",setup(h){const{$slidev:x,$nav:$,$clicksContext:r,$clicks:k,$page:b,$renderContext:B,$frontmatter:i}=v();return r.setup(),(C,s)=>{const n=p,a=u;return c(),m(_,f(d(o(y)(o(i),5))),{right:t(P=>[e("div",g,[l(a,null,{default:t(()=>s[1]||(s[1]=[e("h1",null,"Remember",-1)])),_:1}),l(n,null,{default:t(()=>s[2]||(s[2]=[e("ul",null,[e("li",null,"Type aliases are more versatile and powerful"),e("li",null,"They provide a consistent syntax for all types"),e("li",null,"Interfaces have their place, but have different features"),e("li",null,"Choose based on the needs of your project"),e("li",null,"When in doubt, start with a type alias!")],-1)])),_:1})])]),default:t(()=>[s[3]||(s[3]=e("h1",null,"Best Practices",-1)),l(n,null,{default:t(()=>s[0]||(s[0]=[e("ul",null,[e("li",null,"Use type aliases as your default choice"),e("li",null,"Leverage unions and intersections for flexible types"),e("li",null,"Use mapped and conditional types for advanced scenarios"),e("li",null,"Reserve interfaces for specific use cases (merging, implements)"),e("li",null,"Be consistent in your usage across the project")],-1)])),_:1})]),_:1},16)}}};export{z as default};
