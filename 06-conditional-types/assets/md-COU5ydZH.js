import{_ as m}from"./slidev/VClick-Dy0U4ynz.js";import{_ as p}from"./Monaco.vue_vue_type_style_index_0_lang-PbhPljuR.js";import{_ as d}from"./slidev/VClicks-D5ObCjjO.js";import{o as _,c as A,k as l,e,l as n,ap as o,m as f,q as g,s as x,I as s}from"./modules/vue-CxoEfOET.js";import{I as U}from"./slidev/default-LcC82TyC.js";import{u as B,f as v}from"./slidev/context-3q2PLs6E.js";import"./index-YS8mX8ZZ.js";import"./monaco/bundled-types-ZC9ZEqlK.js";import"./modules/file-saver-igGfcqei.js";import"./modules/shiki-JPDyeuZ2.js";const q={__name:"slides.md__slidev_3",setup(w){const{$slidev:C,$nav:k,$clicksContext:i,$clicks:I,$page:Q,$renderContext:T,$frontmatter:r}=B();return i.setup(),(y,t)=>{const a=d,c=p,u=m;return _(),A(U,g(x(s(v)(s(r),2))),{default:l(()=>[t[1]||(t[1]=e("h1",null,"Basic Syntax of Conditional Types",-1)),n(a,null,{default:l(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,[o("Uses the form: "),e("code",null,"T extends U ? X : Y")]),e("li",null,[e("code",null,"T extends U"),o(" is the condition")]),e("li",null,[o("If "),e("code",null,"T"),o(" is assignable to "),e("code",null,"U"),o(", the type resolves to "),e("code",null,"X")]),e("li",null,[o("Otherwise, it resolves to "),e("code",null,"Y")]),e("li",null,"Can be nested for more complex conditions"),e("li",null,"Often used with generics for maximum flexibility")],-1)])),_:1}),n(u,null,{default:l(()=>[n(c,f({"code-lz":"C4TwDgpgBAcgrgWwEYQE4HlUGVioJYB2A5gDwAqAfFALxRlQQAewEBAJgM5QGIqpQB+brzRQAXFA65CRANwAoeQBsIwYQgnxkaTDnzESPbaiq0ALACYFKtVNSaRGbNINIA9m5UBDAqagAiAAkIJSU3fwV5AHoougALPC4Adzc4JTYoAGMvOA5oLyhQSAZUVDd7ZVUSsvtYR10XUiM+P38yBOS8UKgAMy8uiMUgA=",lang:"ts"},{}),null,16)]),_:1})]),_:1},16)}}};export{q as default};
