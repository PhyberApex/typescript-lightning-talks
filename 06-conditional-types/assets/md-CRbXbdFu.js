import{_ as u}from"./slidev/VClick-KadFY6qS.js";import{_ as p}from"./Monaco.vue_vue_type_style_index_0_lang-Cr73VbwX.js";import{_ as d}from"./slidev/VClicks-BK_3Ioqm.js";import{o as _,c as f,k as l,e,l as n,ap as o,m as A,q as g,s as x,I as s}from"./modules/vue-DbU86lnv.js";import{I}from"./slidev/default-D40xPuHV.js";import{u as w,f as B}from"./slidev/context-DS_YiVYv.js";import"./index-BlwKX02K.js";import"./monaco/bundled-types-Dx74Ub2U.js";import"./modules/file-saver-igGfcqei.js";import"./modules/shiki-BE3ppHTc.js";const E={__name:"slides.md__slidev_3",setup(C){const{$slidev:Q,$nav:k,$clicksContext:i,$clicks:v,$page:T,$renderContext:U,$frontmatter:r}=w();return i.setup(),(V,t)=>{const a=d,c=p,m=u;return _(),f(I,g(x(s(B)(s(r),2))),{default:l(()=>[t[1]||(t[1]=e("h1",null,"Basic Syntax of Conditional Types",-1)),n(a,null,{default:l(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,[o("Uses the form: "),e("code",null,"T extends U ? X : Y")]),e("li",null,[e("code",null,"T extends U"),o(" is the condition")]),e("li",null,[o("If "),e("code",null,"T"),o(" is assignable to "),e("code",null,"U"),o(", the type resolves to "),e("code",null,"X")]),e("li",null,[o("Otherwise, it resolves to "),e("code",null,"Y")]),e("li",null,"Can be nested for more complex conditions"),e("li",null,"Often used with generics for maximum flexibility")],-1)])),_:1}),n(m,null,{default:l(()=>[n(c,A({"code-lz":"C4TwDgpgBAcgrgWwEYQE4HlUGVioJYB2A5gDwAqAfFALxRlQQAewEBAJgM5QGIqpQB+brzRQAXFA65CRANwAoeQBsIwYQgnxkaTDnzESPbaiq0ALACYFKtVNSaRGbNINIA9m5UBDAqagAiAAkIJSU3fwVlVQZUVDd7WEddF1IjPj9/MgALPC4AdzxQqAAzL0KIxSA===",lang:"ts"},{}),null,16)]),_:1})]),_:1},16)}}};export{E as default};
