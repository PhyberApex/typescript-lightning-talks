import{_ as a}from"./slidev/VClicks-BrZiy5Rn.js";import{o as l,c as p,k as n,e,l as u,q as c,s as d,I as s}from"./modules/vue-DUMJyDpK.js";import{I as f}from"./slidev/default-CwA-Jxn7.js";import{u as m,f as _}from"./slidev/context-jkIq1wBa.js";import"./monaco/bundled-types-DUeIbPFq.js";import"./modules/file-saver-B6SWDYl3.js";import"./index-AywjqApK.js";import"./modules/shiki-CJ-DpCWn.js";const U={__name:"slides.md__slidev_6",setup(x){const{$slidev:y,$nav:k,$clicksContext:i,$clicks:$,$page:v,$renderContext:C,$frontmatter:o}=m();return i.setup(),(h,t)=>{const r=a;return l(),p(f,c(d(s(_)(s(o),5))),{default:n(()=>[t[1]||(t[1]=e("h1",null,"Practical Application: Discriminated Unions 1/2",-1)),u(r,null,{default:n(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,"Conditional types work well with discriminated unions"),e("li",null,"Can create type-safe functions that return different types based on input"),e("li",null,"Useful for handling different shapes of data with type-specific operations"),e("li",null,"Enhances type safety and developer experience in complex data structures"),e("li",null,"Enables precise type inference in function returns")],-1)])),_:1})]),_:1},16)}}};export{U as default};
