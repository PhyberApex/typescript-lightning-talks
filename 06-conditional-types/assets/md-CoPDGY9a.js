import{I as i,_ as r}from"./slidev/default-C56hkYLa.js";import{o as c,c as p,k as t,l as u,q as d,s as m,I as n,e,aq as s}from"./modules/vue-QITpS3pg.js";import{u as _,f}from"./slidev/context-CLUQIPCv.js";import"./monaco/bundled-types-z-19q0gu.js";import"./modules/file-saver-igGfcqei.js";import"./index-Qt2n_mFY.js";import"./modules/shiki-D99XPLPD.js";const y=e("h1",null,"Benefits of Conditional Types",-1),x=e("ul",null,[e("li",null,"Enhanced type flexibility and expressiveness"),e("li",null,"Ability to create more precise and reusable utility types"),e("li",null,"Improved type inference in complex scenarios"),e("li",null,"Enables type-level programming and metaprogramming"),e("li",null,[s("Reduces the need for type assertions and "),e("code",null,"any"),s(" types")]),e("li",null,"Facilitates creation of self-documenting code")],-1),g={__name:"slides.md__slidev_7",setup(v){const{$slidev:$,$nav:h,$clicksContext:o,$clicks:k,$page:C,$renderContext:b,$frontmatter:l}=_();return o.setup(),(B,I)=>{const a=r;return c(),p(i,d(m(n(f)(n(l),6))),{default:t(()=>[y,u(a,null,{default:t(()=>[x]),_:1})]),_:1},16)}}},j=g;export{j as default};
