import{_ as c}from"./slidev/VClick-Dsf5TVIK.js";import{_ as p}from"./Monaco.vue_vue_type_style_index_0_lang-DBFE8S7K.js";import{_ as d}from"./slidev/VClicks-qgiSHe33.js";import{b as _,o as f,w as l,g as e,e as n,al as o,m as A,v as g,x,J as s}from"./modules/vue-X0MnRlWk.js";import{I as w}from"./slidev/default-CN_HI1cr.js";import{u as B,f as I}from"./slidev/context-J2p9L5m6.js";import"./index-D3ECH0EM.js";import"./monaco/bundled-types-BZOqfJnq.js";import"./modules/file-saver-BirHVELW.js";import"./modules/shiki-B21V1CEm.js";const Y={__name:"slides.md__slidev_3",setup(Q){const{$clicksContext:i,$frontmatter:r}=B();return i.setup(),(C,t)=>{const a=d,m=p,u=c;return f(),_(w,g(x(s(I)(s(r),2))),{default:l(()=>[t[1]||(t[1]=e("h1",null,"Basic Syntax of Conditional Types",-1)),n(a,null,{default:l(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,[o("Uses the form: "),e("code",null,"T extends U ? X : Y")]),e("li",null,[e("code",null,"T extends U"),o(" is the condition")]),e("li",null,[o("If "),e("code",null,"T"),o(" is assignable to "),e("code",null,"U"),o(", the type resolves to "),e("code",null,"X")]),e("li",null,[o("Otherwise, it resolves to "),e("code",null,"Y")]),e("li",null,"Can be nested for more complex conditions"),e("li",null,"Often used with generics for maximum flexibility")],-1)])),_:1}),n(u,null,{default:l(()=>[n(m,A({"code-lz":"C4TwDgpgBAcgrgWwEYQE4HlUGVioJYB2A5gDwAqAfFALxRlQQAewEBAJgM5QGIqpQB+brzRQAXFA65CRANwAoeQBsIwYQgnxkaTDnzESPbaiq0ALACYFKtVNSaRGbNINIA9m5UBDAqagAiAAkIJSU3fwVlVQZUVDd7WEddF1IjPj9/MgALPC4AdzxQqAAzL0KIxSA===",lang:"ts"},{}),null,16)]),_:1})]),_:1},16)}}};export{Y as default};
