import{_ as A,a as p}from"./Monaco.vue_vue_type_style_index_0_lang-B6uDk2W9.js";import{I as _,_ as u}from"./slidev/default-BTNKIPW8.js";import{o as m,c as d,k as t,l as o,m as f,q as g,s as B,I as n,e,aq as s}from"./modules/vue-LxpGeI35.js";import{u as y,f as k}from"./slidev/context-CMIZ7VgD.js";import"./index-DYtYqCqM.js";import"./monaco/bundled-types-CHB06w8H.js";import"./modules/file-saver-igGfcqei.js";import"./modules/shiki-B0h9ypTE.js";const C=e("h1",null,"Advanced Usage: Inferring Within Conditional Types",-1),I=e("ul",null,[e("li",null,[s("Use "),e("code",null,"infer"),s(" keyword to infer types within a conditional type")]),e("li",null,"Allows for extracting types from complex structures"),e("li",null,"Useful for creating utility types"),e("li",null,"Can infer return types, parameter types, and more"),e("li",null,"Enables powerful type transformations")],-1),h={__name:"slides.md__slidev_5",setup(E){const{$slidev:Q,$nav:x,$clicksContext:l,$clicks:H,$page:v,$renderContext:w,$frontmatter:a}=y();return l.setup(),(F,S)=>{const r=u,i=A,c=p;return m(),d(_,g(B(n(k)(n(a),4))),{default:t(()=>[C,o(r,null,{default:t(()=>[I]),_:1}),o(c,null,{default:t(()=>[o(i,f({"code-lz":"C4TwDgpgBAShwFcBOA7AKuCAeNA+KAvFGlBAB7AQoAmAzlABQB0LAhkgOa0BcUrKIANoBdAJSF8ASxQAzCElhQA/It78QAbgBQWgPS6oAVVqsOELTIQoAxsEkB7FFA5II8BilYBbCL1rAkaQ5RPwCgqABvLSgYqFdEVCgAAwAJCAAbdPsAGigAEgjPHwBfAEIk7WKdUEgoAHFXeDgEpyJm5HRMLBqIexlnRuBcDSh9YkwoSXp/QJQOHWtHfygUBC8AI3kAQSQkVhBCKEEARlyAJlyAZlyAFlyAVmFtHqgdvZAAUXSIHxRgHHwRBI5EoNHoDGkcgUhlEImURigvBQEAAbvJnhMAHJrTZIN77L4/KjAQ74z7fX7/Hp9FY47a7fbDUYGDC1Ka0jbyHRAA==",lang:"ts"},{}),null,16)]),_:1})]),_:1},16)}}},K=h;export{K as default};
