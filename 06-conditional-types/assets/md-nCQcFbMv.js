import{I as l,_ as r}from"./slidev/default-CfvxBB_f.js";import{o as u,c as p,k as n,e,l as c,q as d,s as m,I as i}from"./modules/vue-CxoEfOET.js";import{u as f,f as _}from"./slidev/context-CE5PHkt-.js";import"./monaco/bundled-types-B51-YkWj.js";import"./modules/file-saver-igGfcqei.js";import"./index-DZq7BYIU.js";import"./modules/shiki-JPDyeuZ2.js";const q={__name:"slides.md__slidev_9",setup(y){const{$slidev:g,$nav:v,$clicksContext:a,$clicks:x,$page:C,$renderContext:k,$frontmatter:o}=f();return a.setup(),($,t)=>{const s=r;return u(),p(l,d(m(i(_)(i(o),8))),{default:n(()=>[t[1]||(t[1]=e("h1",null,"Conclusion",-1)),c(s,null,{default:n(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,"Conditional Types are a powerful feature for creating flexible, expressive types"),e("li",null,"They enable type-level programming and sophisticated type transformations"),e("li",null,"Useful in various scenarios: utility types, discriminated unions, type inference"),e("li",null,"Enhance type safety and reduce the need for type assertions"),e("li",null,"Require judicious use to maintain code readability and maintainability"),e("li",null,"Continuous learning and practice are key to mastering Conditional Types")],-1)])),_:1})]),_:1},16)}}};export{q as default};
